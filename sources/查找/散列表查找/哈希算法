哈希算法：
哈希冲突的数据远离是鸽巢原理(也叫抽屉原理).
1.从哈希值不能反向推导出原始数据（所以哈希算法也就单向哈希算法）
2.对输入数据非常敏感，哪怕原始数据只修改了一个Bit，最后得到的哈希值也大不相同。
3.散列冲突的概率很小，对于不同的原始数据，哈希值相同的概率非常小。
4.哈希算法的执行效率要尽量高效，针对较长文本，也能快速地计算出哈希值。

第一个应用是唯一标识，哈希算法可以对大数据做信息摘要，通过一个较短的二进制编码来表示很大的数据。
第二个应用是用户校验数据的完整性和正确性。
第三个应用是安全加密，我们讲到任何哈希算法都会出现散列加密，但是这个冲突概率非常小。越是复杂的哈希算法越难破解，
但同样计算时间也就越长。所以，选择哈希算法的时候，要权衡安全性和计算时间来决定用哪种哈希算法。
第四个应用是散列函数，这个我们前面讲散列表的时候已经详细地讲过，它对哈希算法的要求非常特别，更加看重的是散列的平均性和哈希算法的执行效率。

一致性hash：https://zhuanlan.zhihu.com/p/24440059