   public class PriorityQueue{
         private long[] a;
         private int size;
         private int count;//元素个数

        public PriorityQueue(int maxSize){
            size = maxSize;
            count = 0;
            a = new long[maxSize];
        }

        public void insert(long value){
            if(isFull()){
                System.out.println("队列已满！");
                return;
            }
            int j;
            if(count == 0){//空队列直接添加
                a[count++] = value;
            }else {//将数组中的数字依照下标按照从大到小排列
                for (j = count -1; j >= 0; j--){
                    if(value > a[j]){
                        a[j+1] = a[j];
                    }else {
                        break;
                    }
                }
                a[j+1] = value;
                count++;
            }
        }

        public long remove(){
            if(isEmpty()){
                System.out.println("队列为空！");
                return 0;
            }
            return a[--count];
        }

        public long peekMin(){
            return a[count -1];
        }

        public boolean isFull(){
            return count == size;
        }

        public boolean isEmpty(){
            return count == 0;
        }

        public int size(){
            return count;
        }

        public void display(){
            for(int i = count-1; i >= 0; i--) {
                System.out.print(a[i] + " ");
            }
        }

    }