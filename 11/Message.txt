public class Message {

    Message next;
    int flag;
    static Message sPool;
    static int sPoolSize;
    Message(int flag){
        this.flag = flag;
    }

    public static Message reverseHead(Message head){
        if (head == null) {
            return head;
        }
        Message cur = head;
        Message pre = null;
        while (cur != null) {
            Message next = cur.next;
            cur.next = pre;

            pre = cur;
            cur = next;
        }
        return pre;
    }

    public static void init(){
        for (int i = 1; i <= 10; i++){
            Message msg = new Message(i);
            Message.sPoolSize++;
            if(i == 1){
                Message.sPool = msg;
                continue;
            }
            msg.next = Message.sPool;
            Message.sPool = msg;
        }

    }

    public static void output(){
        init();
        Message.sPool = reverseHead(Message.sPool);
        for (int i = 1; i <= Message.sPoolSize; i++){
            Log.e("linked list : ", Message.sPool.flag+"");
            Message.sPool =  Message.sPool.next;
        }
    }

    public static Msg reverseHead2(Message msg){
        if(msg == null || msg.next == null){
            return  msg;
        }
        Msg next = msg.next;
        Msg pre = reverseHead(msg.next);
        msg.next = null;
        next.next = msg;
        return  pre;
    }

}
