栈：受限制，可控。后进先出。
数组实现：顺序栈。
链表实现：链式栈。
空间复杂度：指除了原本的数据储存空间外，算法运行还需要额外的储存空间。

public class ArrayStack {
    private long [] a;
    private int size;//栈数组的大小
    private int top;//栈顶

    public ArrayStack(int maxSize){
        this.size = maxSize;
        this.a = new long[size];
        this.top = -1;
    }


    public void push(long value){//入栈
        if(isFull()){
            System.out.print("栈已满");
            return;
        }
        a[++top] = value;
    }

    public long peek(){//弹出栈顶内容，但不删除
        if(isEmpty()){
            System.out.print("栈中没有数据!");
            return 0;
        }
        return a[top];
    }

    public long pop(){//弹出栈顶内容，删除
        if(isEmpty()){
            System.out.print("栈中没有数据!");
            return 0;
        }
        return a[top--];
    }

    public void test(){
        System.out.print("打印" + a[top + 1]);
    }
    public int size(){
        return top + 1;
    }

    public boolean isEmpty(){
        return (top == -1);
    }

    public boolean isFull(){
        return (top == size -1);
    }

    public void display(){
        for (int i = top; i >= 0;i--){
            System.out.print(a[i] + "");
        }
        System.out.print("");
    }
}