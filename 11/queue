public class RoundQueue{
        private int size;//数组大小
        private long[] a;
        private int front; //头
        private int rear;//尾
        private int count;//实际存储数量


        public RoundQueue(int maxSize){
            this.size = maxSize;
            a = new long[size];
            front = 0;
            rear = -1;
            count = 0;
        }

        public void insert(long value){
            if(isFull()){
                System.out.print("队列已满！");
                return;
            }
            //尾指针满了就循环到0处
            rear = ++rear % size;
            a[rear] = value;
            count++;
        }

        public long remove(){
            if(isEmpty()){
                System.out.print("队列为空！");
                return 0;
            }
            count--;
            front = front % size;
            return a[front++];
        }

        public void display(){
            if(isEmpty()){
                System.out.print("队列为空！");
                return;
            }
            int item = front;
            for (int i = 0; i < count; i++){
                System.out.print( a[item++ % size]+" ");
            }
            System.out.print("");
        }

        public long peek(){
            if(isEmpty()){
                System.out.print("队列为空！");
                return 0;
            }
            return a[front];
        }


        public boolean isFull(){
            return count == size;
        }

        public boolean isEmpty(){
            return count == 0;
        }

        public int size(){
            return count;
        }

    }